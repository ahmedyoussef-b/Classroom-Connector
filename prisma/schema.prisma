// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id          String    @id @default(cuid())
  email       String    @unique
  name        String?
  role        Role
  ambition    String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  classe      Classe?   @relation(fields: [classeId], references: [id])
  classeId    String?
  etat        EtatEleve? @relation(fields: [etatEleveId], references: [id])
  etatEleveId String?   @unique
  messages    Message[]
  reactions   Reaction[]
}

model Classe {
  id           String  @id @default(cuid())
  nom          String
  professeur   User    @relation(fields: [professeurId], references: [id])
  professeurId String
  eleves       User[]
  chatroom     Chatroom? @relation(fields: [chatroomId], references: [id])
  chatroomId   String? @unique
}

model Metier {
  id          String      @id @default(cuid())
  nom         String
  description String
  theme       Json // { backgroundColor, textColor, primaryColor, accentColor, cursor, backgroundImage }
  etatsEleves EtatEleve[]
}

model EtatEleve {
  id         String  @id @default(cuid())
  eleve      User    @relation(fields: [eleveId], references: [id])
  eleveId    String  @unique
  metier     Metier? @relation(fields: [metierId], references: [id])
  metierId   String?
  isPunished Boolean @default(false)
}

model Chatroom {
  id        String    @id @default(cuid())
  messages  Message[]
  classe    Classe?
}

model Message {
  id          String     @id @default(cuid())
  message     String
  sender      User       @relation(fields: [senderId], references: [id])
  senderId    String
  senderName  String
  chatroom    Chatroom   @relation(fields: [chatroomId], references: [id])
  chatroomId  String
  createdAt   DateTime   @default(now())
  reactions   Reaction[]
}

model Reaction {
  id        String   @id @default(cuid())
  emoji     String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  message   Message  @relation(fields: [messageId], references: [id])
  messageId String
  createdAt DateTime @default(now())

  @@unique([emoji, userId, messageId])
}

enum Role {
  ELEVE
  PROFESSEUR
}
