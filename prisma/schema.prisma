generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  PROFESSEUR
  ELEVE
}

model User {
  id                  String   @id @default(cuid())
  email               String   @unique
  nom                 String
  role                Role
  classeEnseignee     Classe[] @relation("ProfesseurClasse")
  classe              Classe[] @relation("ElevesClasse")
  etatEleve           EtatEleve?
  messages            Message[]
  reactions           Reaction[]
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
}

model Classe {
  id           String @id @default(cuid())
  nom          String
  professeurId String @unique
  professeur   User   @relation("ProfesseurClasse", fields: [professeurId], references: [id])
  eleves       User[] @relation("ElevesClasse")
  chatroom     Chatroom?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Metier {
  id          String   @id @default(cuid())
  nom         String
  description String
  theme       Json // Regroupe tous les attributs de th√®me
  etatEleve   EtatEleve[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model EtatEleve {
  id         String  @id @default(cuid())
  eleveId    String  @unique
  eleve      User    @relation(fields: [eleveId], references: [id])
  metierId   String?
  metier     Metier? @relation(fields: [metierId], references: [id])
  isPunished Boolean @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Chatroom {
  id        String    @id @default(cuid())
  classeId  String    @unique
  classe    Classe    @relation(fields: [classeId], references: [id])
  messages  Message[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Message {
  id         String     @id @default(cuid())
  chatroomId String
  chatroom   Chatroom   @relation(fields: [chatroomId], references: [id])
  auteurId   String
  auteur     User       @relation(fields: [auteurId], references: [id])
  contenu    String
  reactions  Reaction[]
  createdAt  DateTime   @default(now())
}

model Reaction {
  id        String  @id @default(cuid())
  messageId String
  message   Message @relation(fields: [messageId], references: [id])
  auteurId  String
  auteur    User    @relation(fields: [auteurId], references: [id])
  emoji     String
  createdAt DateTime @default(now())

  @@unique([messageId, auteurId, emoji])
}
