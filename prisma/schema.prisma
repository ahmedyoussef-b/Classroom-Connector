// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  role      Role
  ambition  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  classe   Classe? @relation("ElevesDansClasse", fields: [classeId], references: [id])
  classeId String?

  messages  Message[]
  reactions Reaction[]

  classesEnseignees Classe[] @relation("ProfesseurPourClasse")

  etat EtatEleve?
}

enum Role {
  ELEVE
  PROFESSEUR
}

model Classe {
  id  String @id @default(cuid())
  nom String

  professeur   User   @relation("ProfesseurPourClasse", fields: [professeurId], references: [id])
  professeurId String

  eleves User[] @relation("ElevesDansClasse")

  chatroomId String?   @unique
  chatroom   Chatroom? @relation(fields: [chatroomId], references: [id])
}

model Metier {
  id          String @id @default(cuid())
  nom         String
  description String
  theme       Json

  etatsEleves EtatEleve[]
}

model EtatEleve {
  id         String  @id @default(cuid())
  eleve      User    @relation(fields: [eleveId], references: [id])
  eleveId    String  @unique
  metier     Metier? @relation(fields: [metierId], references: [id])
  metierId   String?
  isPunished Boolean @default(false)
}

model Chatroom {
  id       String    @id @default(cuid())
  classe   Classe?
  messages Message[]
}

model Message {
  id         String   @id @default(cuid())
  message    String
  sender     User     @relation(fields: [senderId], references: [id])
  senderId   String
  senderName String
  createdAt  DateTime @default(now())

  chatroom   Chatroom @relation(fields: [chatroomId], references: [id])
  chatroomId String

  reactions Reaction[]
}

model Reaction {
  id        String   @id @default(cuid())
  emoji     String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  message   Message  @relation(fields: [messageId], references: [id])
  messageId String
  createdAt DateTime @default(now())

  @@unique([emoji, userId, messageId])
}
