generator client {
  provider        = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id              String    @id @default(cuid())
  email           String    @unique
  name            String?
  role            Role      @default(ELEVE)
  ambition        String?
  classeEnseignee Classe[]  @relation("ProfesseurPourClasse")
  classe          Classe?   @relation("EleveDansClasse", fields: [classeId], references: [id])
  classeId        String?
  messages        Message[]
  etat            EtatEleve?
  reactions       Reaction[]

  @@index([classeId])
}

model Classe {
  id           String    @id @default(cuid())
  nom          String
  professeur   User      @relation("ProfesseurPourClasse", fields: [professeurId], references: [id])
  professeurId String
  eleves       User[]    @relation("EleveDansClasse")
  chatroomId   String    @unique @default(cuid())

  @@index([professeurId])
}

model Metier {
  id          String      @id @default(cuid())
  nom         String
  description String
  theme       Json // { primaryColor, accentColor, backgroundColor, textColor, cursor, backgroundImage, icon }
  etats       EtatEleve[]
}

model EtatEleve {
  id         String  @id @default(cuid())
  eleve      User    @relation(fields: [eleveId], references: [id])
  eleveId    String  @unique
  metier     Metier? @relation(fields: [metierId], references: [id])
  metierId   String?
  isPunished Boolean @default(false)

  @@index([eleveId])
  @@index([metierId])
}

model Message {
  id         String     @id @default(cuid())
  message    String
  auteur     User       @relation(fields: [senderId], references: [id])
  senderId   String
  senderName String
  chatroomId String
  createdAt  DateTime   @default(now())
  reactions  Reaction[]

  @@index([senderId])
}

model Reaction {
  id        String   @id @default(cuid())
  emoji     String
  message   Message  @relation(fields: [messageId], references: [id])
  messageId String
  auteur    User     @relation(fields: [userId], references: [id])
  userId    String
  createdAt DateTime @default(now())

  @@index([messageId])
  @@index([userId])
}

enum Role {
  ELEVE
  PROFESSEUR
}
