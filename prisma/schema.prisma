// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String       @id @default(cuid())
  email        String       @unique
  name         String
  role         Role         @default(ELEVE)
  classeId     String?
  classe       Classe?      @relation(fields: [classeId], references: [id])
  sentMessages Message[]    @relation("sentMessages")
  reactions    Reaction[]
  etat         EtatEleve?
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
}

model Classe {
  id        String     @id @default(cuid())
  name      String
  teacherId String     @unique
  teacher   User       @relation(fields: [teacherId], references: [id])
  students  User[]
  chatrooms Chatroom[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Chatroom {
  id        String   @id @default(cuid())
  name      String
  classeId  String
  classe    Classe   @relation(fields: [classeId], references: [id])
  messages  Message[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Message {
  id         String     @id @default(cuid())
  content    String
  chatroomId String
  chatroom   Chatroom   @relation(fields: [chatroomId], references: [id])
  senderId   String
  sender     User       @relation("sentMessages", fields: [senderId], references: [id])
  reactions  Reaction[]
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}

model Reaction {
  id        String   @id @default(cuid())
  emoji     String
  messageId String
  message   Message  @relation(fields: [messageId], references: [id])
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())

  @@unique([messageId, userId, emoji])
}

model Metier {
  id           String      @id @default(cuid())
  name         String      @unique
  description  String
  theme        Json // Pour stocker les détails du thème (couleurs, icônes, etc.)
  etatsEleves  EtatEleve[]
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
}

model EtatEleve {
  id         String  @id @default(cuid())
  studentId  String  @unique
  student    User    @relation(fields: [studentId], references: [id])
  metierId   String?
  metier     Metier? @relation(fields: [metierId], references: [id])
  isPunished Boolean @default(false)
  updatedAt  DateTime @updatedAt
}

enum Role {
  PROFESSEUR
  ELEVE
}
