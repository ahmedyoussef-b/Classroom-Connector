// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

enum Role {
  PROFESSEUR
  ELEVE
}

model User {
  id              String       @id @default(cuid())
  email           String       @unique
  name            String?
  role            Role
  ambition        String?
  classeEnseignee Classe[]     @relation("ProfesseurPourClasse")
  classe          Classe?      @relation("EleveDansClasse", fields: [classeId], references: [id])
  classeId        String?
  messages        Message[]
  etat            EtatEleve?
  reactions       Reaction[]

  @@index([classeId])
}

model Classe {
  id           String    @id @default(cuid())
  nom          String
  professeur   User      @relation("ProfesseurPourClasse", fields: [professeurId], references: [id])
  professeurId String
  eleves       User[]    @relation("EleveDansClasse")
  chatroomId   String    @unique
  Chatroom     Chatroom? @relation(fields: [chatroomId], references: [id])

  @@index([professeurId])
}

model EtatEleve {
  id         String  @id @default(cuid())
  eleve      User    @relation(fields: [eleveId], references: [id])
  eleveId    String  @unique
  metier     Metier? @relation(fields: [metierId], references: [id])
  metierId   String?
  isPunished Boolean @default(false)

  @@index([eleveId])
  @@index([metierId])
}

model Metier {
  id          String      @id @default(cuid())
  nom         String
  description String
  theme       Json // JSON to hold theme properties like colors, cursor, etc.
  etats       EtatEleve[]
}

model Chatroom {
  id        String    @id @default(cuid())
  classe    Classe?
  messages  Message[]
}

model Message {
  id          String     @id @default(cuid())
  message     String
  createdAt   DateTime   @default(now())
  sender      User       @relation(fields: [senderId], references: [id])
  senderId    String
  senderName  String
  chatroom    Chatroom   @relation(fields: [chatroomId], references: [id])
  chatroomId  String
  reactions   Reaction[]

  @@index([senderId])
  @@index([chatroomId])
}

model Reaction {
  id        String   @id @default(cuid())
  emoji     String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  message   Message  @relation(fields: [messageId], references: [id])
  messageId String

  @@index([userId])
  @@index([messageId])
}
