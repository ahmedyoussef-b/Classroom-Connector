// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String     @id @default(uuid())
  name        String
  email       String     @unique
  role        Role
  classeId    String?
  classe      Classe?    @relation(fields: [classeId], references: [id])
  etatEleve   EtatEleve?
  messages    Message[]
  reactions   Reaction[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model Classe {
  id           String    @id @default(uuid())
  name         String
  professeurId String    @unique
  professeur   User      @relation(fields: [professeurId], references: [id])
  eleves       User[]
  chatroom     Chatroom?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}

model Metier {
  id          String      @id @default(uuid())
  name        String      @unique
  description String
  theme       Json // Grouping theme properties into a single JSON object
  eleves      EtatEleve[]
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model EtatEleve {
  id         String  @id @default(uuid())
  isPunished Boolean @default(false)
  eleveId    String  @unique
  eleve      User    @relation(fields: [eleveId], references: [id])
  metierId   String?
  metier     Metier? @relation(fields: [metierId], references: [id])
}

model Chatroom {
  id        String    @id @default(uuid())
  classeId  String    @unique
  classe    Classe    @relation(fields: [classeId], references: [id])
  messages  Message[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Message {
  id          String     @id @default(uuid())
  content     String
  chatroomId  String
  chatroom    Chatroom   @relation(fields: [chatroomId], references: [id])
  senderId    String
  sender      User       @relation(fields: [senderId], references: [id])
  reactions   Reaction[]
  createdAt   DateTime   @default(now())
}

model Reaction {
  id        String  @id @default(uuid())
  emoji     String
  messageId String
  message   Message @relation(fields: [messageId], references: [id])
  userId    String
  user      User    @relation(fields: [userId], references: [id])

  @@unique([messageId, userId, emoji])
}

enum Role {
  PROFESSEUR
  ELEVE
}
