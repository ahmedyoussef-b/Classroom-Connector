// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                  String     @id @default(cuid())
  email               String     @unique
  name                String?
  role                Role       @default(ELEVE)
  ambition            String?
  createdAt           DateTime   @default(now())
  updatedAt           DateTime   @updatedAt
  classeId            String?
  classe              Classe?    @relation("ElevesDeClasse", fields: [classeId], references: [id])
  classesEnseignees   Classe[]   @relation("ProfesseurDeClasse")
  etat                EtatEleve?
  messages            Message[]
  reactions           Reaction[]
  sessionsEnseignees  Session[]
  sessionsParticipees Session[]  @relation("SessionParticipants")
}

enum Role {
  ELEVE
  PROFESSEUR
}

model Classe {
  id           String    @id @default(cuid())
  nom          String
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  professeurId String
  professeur   User      @relation("ProfesseurDeClasse", fields: [professeurId], references: [id])
  eleves       User[]    @relation("ElevesDeClasse")
  chatroomId   String    @unique
  chatroom     Chatroom  @relation(fields: [chatroomId], references: [id])
}

model EtatEleve {
  id         String   @id @default(cuid())
  eleveId    String   @unique
  eleve      User     @relation(fields: [eleveId], references: [id])
  isPunished Boolean  @default(false)
  metierId   String?
  metier     Metier?  @relation(fields: [metierId], references: [id])
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Metier {
  id          String      @id @default(cuid())
  nom         String
  description String
  icon        String?
  theme       Json
  eleves      EtatEleve[]
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model Chatroom {
  id        String    @id @default(cuid())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  messages  Message[]
  classes   Classe[]
}

model Message {
  id         String     @id @default(cuid())
  message    String
  createdAt  DateTime   @default(now())
  senderId   String
  senderName String
  sender     User       @relation(fields: [senderId], references: [id])
  chatroomId String
  chatroom   Chatroom   @relation(fields: [chatroomId], references: [id])
  reactions  Reaction[]
}

model Reaction {
  id        String   @id @default(cuid())
  emoji     String
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  messageId String
  message   Message  @relation(fields: [messageId], references: [id])
  createdAt DateTime @default(now())

  @@unique([userId, messageId, emoji])
}

model Session {
  id           String   @id @default(cuid())
  createdAt    DateTime @default(now())
  endedAt      DateTime?
  professeurId String
  professeur   User     @relation(fields: [professeurId], references: [id])
  participants User[]   @relation("SessionParticipants")
}
